---
interface Props {
  title: string;
  desc: string;
  btnValue?: string;
  btnHref?: string;
  class?: string;
  bgUrl?: string;
  bgColor?: string;
  color?: string;
  backPath?:string;
}

const {
  title,
  desc,
  btnValue,
  btnHref,
  class: className,
  bgUrl,
  bgColor,
  color,
  backPath
} = Astro.props;

const backgroundUrl = `url(${bgUrl})`;
const backgroundColor = bgColor;
const textColor = color || "color-white";
---

<section class={"jumbotron " + className}>
  <div class="container">
    <div class="jumbotron-content">
      <h1 class={"jumbotron-title align-it-center flex " + textColor}>
        { backPath && 
          <a href={backPath} class="back-btn" id="backButton">
            <svg class="" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 14 10" style="transform: rotate(180deg);"><path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M1 5h12m0 0L9 1m4 4L9 9"></path></svg>
          </a>
        }
        {title}
      </h1>
      <div class={"jumbotron-desc " + textColor} set:html={desc}></div>
      {
        btnHref && btnValue && (
          <a href={btnHref} class="btn btn-white btn-lg">
            {btnValue}
          </a>
        )
      }
      {
        !btnHref && btnValue && (
          <button class="btn btn-white btn-lg">{btnValue}</button>
        )
      }
    </div>
  </div>
</section>

<style define:vars={{ backgroundUrl, backgroundColor }}>
  .jumbotron {
    background-image: var(--backgroundUrl);
    height: 54vh;
    padding: 5rem 0;
    display: flex;
    justify-content: center;
    align-items: center;
    position: relative;
    background-size: cover;
    background-repeat: no-repeat;
    min-height: 400px;
    position: relative;
    border-bottom: 1px solid;
  }

  .jumbotron.large-desc .jumbotron-desc {
    max-width: 100%;
  }

  .jumbotron.jumbotron--small {
    height: auto;
    min-height: 140px;
  }

  .jumbotron.with-white-gradient::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(0deg, white 5%, #ffffffdb 28%, white 100%);
    backdrop-filter: brightness(1.3);
  }
  

  .jumbotron.with-white-gradient .jumbotron-title,
  .jumbotron.with-white-gradient .jumbotron-desc {
    color: #000;
  }

  .jumbotron.with-white-gradient .btn {
    border: 1px solid #ddd;
  }

  .jumbotron-content {
    justify-content: center;
    flex-direction: column;
    display: flex;
    align-items: flex-start;
  }

  .jumbotron-content .btn {
    margin-top: 2rem;
  }

  .jumbotron.with-mask::before {
    content: "";
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(60deg, #11091b 30%, #11091bf0 50%, #160c2461);
  }

  .jumbotron.with-border {
    border-top: 1px solid;
    border-bottom: 1px solid;
    border-color: #eeeeeeb0;
  }

  .jumbotron-title {
    margin: 0;
    margin-bottom: 1rem;
    font-size: 3.2em;
    font-weight: 100;
    text-transform: uppercase;
    text-wrap: balance;
  }

  .jumbotron-desc {
    max-width: 720px;
    opacity: 0.88;
    text-wrap: pretty;
  }

  .jumbotron-desc.color-dark {
    color: #000;
    font-size: 0.96em;

    @media(max-width: 550px) {
      font-size: 0.84em;
      text-wrap: pretty;
    }
  }

  .back-btn {
    background: none;
    margin-right: 6px;
    color: currentColor;
    border-color: currentColor;
    border: none;
    padding: 12px;
    width: 50px;
    height: 50px;
    margin-left: -14px;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .back-btn svg {
    fill: currentColor;
    width: 32px;
    height: 32px;
    cursor: pointer;
  }

  @media(max-width: 900px){
    .jumbotron.jumbotron--small {
      padding: 3rem 0;
    }
  }

  @media(max-width: 600px){
    .jumbotron-title {
      font-size: 1.8em;
    }
  }
</style>